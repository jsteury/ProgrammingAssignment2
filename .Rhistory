simplystatistics.tumblr <- read.table("C:\\Users\\jsteury\\AppData\\Local\\Temp\\RtmpUNznxw\\data22cc7aa259ec", quote="\"")
View(simplystatistics.tumblr)
readlines(simplystatistics.tumblr,n=150)
readlines
con<-url(http://simplystatistics.tumblr.com/)
con<-url(http://simplystatistics.tumblr.com)
con<-url("http://simplystatistics.tumblr.com")
simplystats <- readLines(con, n=150)
simplystats
nchar
nchar(simplystats)
setInternet2(use=true)
setInternet2(use=TRUE)
download.file
x <- download.file ("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv ")
x <- download.file ("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv ",ss06data)
x <- download.file ("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv ","ss06data")
count
x
ss06data
library(datasets)
data(iris)
View(iris)
irisSubset <-iris[1:4,]
irisSubset <-iris[,1:4]
dist(irisSubset)
disIris <-dist(irisSubset)
hclust(distiris)
hclust(disiris)
hclust(disIris)
hcluster <-hclust(disIris)
plot(hcluster)
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(zip.train)
im<-zip2image(zip.train, 3)
View(im)
image(im)
im8<-zip2image(zip.train, 8)
im18<-zip2image(zip.train, 18)
image(im8)
image(im18)
svd8 <- svd(im8)
fix(svd8)
fix(svd8)
fix(svd8)
image(im8)
plot(svd8$u[,1])
par(mfrow=c(1,3))
image(im8)
plot(svd8$u[,1])
plot(svd8$v[,1])
par(mfrow-c(1,2))
plot(svd8$d)
plot(svd8$d^2/sum(svd8$d^2)
)
par(mfrow-c(1,3))
par(mfrow-c(1,2))
setwd("C:/JS Home Stuff/JSDocs/Home/Coursera/R_Programming/Program2/ProgrammingAssignment2")
setwd(..)
?setwd()
setwd(~)
setwd(".."
)
ls
list.files()
setwd("..")
list.files()
v=makeVector(R)
source("makeVector.R")
v=makeVector(b)
b
v
b <- c(1.2, 3.4, 5.6, 7.8)
b
v=makeVector(b)
v
v=makeVector(c(1,2,3))
v
v$set()
v$set(y)
v$set(b)
v$get()
v$getmean
v$setmean
v$setmean()
v$setmean(mean(b))
v$getmean
v$setmean()
v$getmean
v$getmean
v$getmean
x<-matrix()
x
source("cachematrixjs.R")
source("cachematrix_js.R")
ls
list.files()
setwd("../Program2/ProgrammingAssignment2")
setwd("../Program2")
getwd()
setwd("Program2/ProgrammingAssignment2")
list.files
list.files()
source("cachematrix_js.R")
source("cachematrix_js.R")
matr<- (1:6,2,3)
matr<- matrix(1:6,2,3)
matr
z<-makematrix(matr)
z
source("cachematrix_js.R")
source("cachematrix_js.R")
z<-makematrix(matr)
z
source("cachematrix_js.R")
z<-makematrix(matr)
z
source("cachematrix_js.R")
source("cachematrix_js.R")
inverse <- findinverse(matr)
matr<- matrix(1:4,2,2)
inverse <- findinverse(matr)
inverse
matr*inverse
matr<- matrix((1,1,1,1),2,2)
matr <- matrix(,2,2)
matr < colbind(c(1,1),c(1,1))
matr < cbind(c(1,1),c(1,1))
matr
matr <- cbind(c(1,1),c(1,1))
matr <- cbind(c(1,1),c(1,1))
matr
findinverse(matr)
matr <- cbind(c(1,1),c(1,2))
findinverse(matr)
i<-findinverse(matr)
i
source("cachematrix_js.R")
z<-makematrix(matr)
z
z$get
matr
z$get()
cacheinverse()
cacheinverse(z
)
arg(solve())
str(solve())
solve
z$get()
class(z$get())
cacheinverse(z)
source("cachematrix_js.R")
z<-makematrix(matr)
z$get()
cacheinverse(z)
cacheinverse(z)
cacheinverse(z)
